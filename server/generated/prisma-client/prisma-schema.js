module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateAsset {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type Asset {
  id: ID!
  partNumber: String!
  partName: String!
  assetNumber: String!
  assetName: String!
  stockQuantity: Int!
  outQuantity: Int!
  tag(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AssetConnection {
  pageInfo: PageInfo!
  edges: [AssetEdge]!
  aggregate: AggregateAsset!
}

input AssetCreateInput {
  id: ID
  partNumber: String!
  partName: String!
  assetNumber: String!
  assetName: String!
  stockQuantity: Int!
  outQuantity: Int
  tag: TagCreateManyWithoutAssetInput
}

input AssetCreateManyWithoutTagInput {
  create: [AssetCreateWithoutTagInput!]
  connect: [AssetWhereUniqueInput!]
}

input AssetCreateWithoutTagInput {
  id: ID
  partNumber: String!
  partName: String!
  assetNumber: String!
  assetName: String!
  stockQuantity: Int!
  outQuantity: Int
}

type AssetEdge {
  node: Asset!
  cursor: String!
}

enum AssetOrderByInput {
  id_ASC
  id_DESC
  partNumber_ASC
  partNumber_DESC
  partName_ASC
  partName_DESC
  assetNumber_ASC
  assetNumber_DESC
  assetName_ASC
  assetName_DESC
  stockQuantity_ASC
  stockQuantity_DESC
  outQuantity_ASC
  outQuantity_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AssetPreviousValues {
  id: ID!
  partNumber: String!
  partName: String!
  assetNumber: String!
  assetName: String!
  stockQuantity: Int!
  outQuantity: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AssetScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  partNumber: String
  partNumber_not: String
  partNumber_in: [String!]
  partNumber_not_in: [String!]
  partNumber_lt: String
  partNumber_lte: String
  partNumber_gt: String
  partNumber_gte: String
  partNumber_contains: String
  partNumber_not_contains: String
  partNumber_starts_with: String
  partNumber_not_starts_with: String
  partNumber_ends_with: String
  partNumber_not_ends_with: String
  partName: String
  partName_not: String
  partName_in: [String!]
  partName_not_in: [String!]
  partName_lt: String
  partName_lte: String
  partName_gt: String
  partName_gte: String
  partName_contains: String
  partName_not_contains: String
  partName_starts_with: String
  partName_not_starts_with: String
  partName_ends_with: String
  partName_not_ends_with: String
  assetNumber: String
  assetNumber_not: String
  assetNumber_in: [String!]
  assetNumber_not_in: [String!]
  assetNumber_lt: String
  assetNumber_lte: String
  assetNumber_gt: String
  assetNumber_gte: String
  assetNumber_contains: String
  assetNumber_not_contains: String
  assetNumber_starts_with: String
  assetNumber_not_starts_with: String
  assetNumber_ends_with: String
  assetNumber_not_ends_with: String
  assetName: String
  assetName_not: String
  assetName_in: [String!]
  assetName_not_in: [String!]
  assetName_lt: String
  assetName_lte: String
  assetName_gt: String
  assetName_gte: String
  assetName_contains: String
  assetName_not_contains: String
  assetName_starts_with: String
  assetName_not_starts_with: String
  assetName_ends_with: String
  assetName_not_ends_with: String
  stockQuantity: Int
  stockQuantity_not: Int
  stockQuantity_in: [Int!]
  stockQuantity_not_in: [Int!]
  stockQuantity_lt: Int
  stockQuantity_lte: Int
  stockQuantity_gt: Int
  stockQuantity_gte: Int
  outQuantity: Int
  outQuantity_not: Int
  outQuantity_in: [Int!]
  outQuantity_not_in: [Int!]
  outQuantity_lt: Int
  outQuantity_lte: Int
  outQuantity_gt: Int
  outQuantity_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [AssetScalarWhereInput!]
  OR: [AssetScalarWhereInput!]
  NOT: [AssetScalarWhereInput!]
}

type AssetSubscriptionPayload {
  mutation: MutationType!
  node: Asset
  updatedFields: [String!]
  previousValues: AssetPreviousValues
}

input AssetSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AssetWhereInput
  AND: [AssetSubscriptionWhereInput!]
  OR: [AssetSubscriptionWhereInput!]
  NOT: [AssetSubscriptionWhereInput!]
}

input AssetUpdateInput {
  partNumber: String
  partName: String
  assetNumber: String
  assetName: String
  stockQuantity: Int
  outQuantity: Int
  tag: TagUpdateManyWithoutAssetInput
}

input AssetUpdateManyDataInput {
  partNumber: String
  partName: String
  assetNumber: String
  assetName: String
  stockQuantity: Int
  outQuantity: Int
}

input AssetUpdateManyMutationInput {
  partNumber: String
  partName: String
  assetNumber: String
  assetName: String
  stockQuantity: Int
  outQuantity: Int
}

input AssetUpdateManyWithoutTagInput {
  create: [AssetCreateWithoutTagInput!]
  delete: [AssetWhereUniqueInput!]
  connect: [AssetWhereUniqueInput!]
  set: [AssetWhereUniqueInput!]
  disconnect: [AssetWhereUniqueInput!]
  update: [AssetUpdateWithWhereUniqueWithoutTagInput!]
  upsert: [AssetUpsertWithWhereUniqueWithoutTagInput!]
  deleteMany: [AssetScalarWhereInput!]
  updateMany: [AssetUpdateManyWithWhereNestedInput!]
}

input AssetUpdateManyWithWhereNestedInput {
  where: AssetScalarWhereInput!
  data: AssetUpdateManyDataInput!
}

input AssetUpdateWithoutTagDataInput {
  partNumber: String
  partName: String
  assetNumber: String
  assetName: String
  stockQuantity: Int
  outQuantity: Int
}

input AssetUpdateWithWhereUniqueWithoutTagInput {
  where: AssetWhereUniqueInput!
  data: AssetUpdateWithoutTagDataInput!
}

input AssetUpsertWithWhereUniqueWithoutTagInput {
  where: AssetWhereUniqueInput!
  update: AssetUpdateWithoutTagDataInput!
  create: AssetCreateWithoutTagInput!
}

input AssetWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  partNumber: String
  partNumber_not: String
  partNumber_in: [String!]
  partNumber_not_in: [String!]
  partNumber_lt: String
  partNumber_lte: String
  partNumber_gt: String
  partNumber_gte: String
  partNumber_contains: String
  partNumber_not_contains: String
  partNumber_starts_with: String
  partNumber_not_starts_with: String
  partNumber_ends_with: String
  partNumber_not_ends_with: String
  partName: String
  partName_not: String
  partName_in: [String!]
  partName_not_in: [String!]
  partName_lt: String
  partName_lte: String
  partName_gt: String
  partName_gte: String
  partName_contains: String
  partName_not_contains: String
  partName_starts_with: String
  partName_not_starts_with: String
  partName_ends_with: String
  partName_not_ends_with: String
  assetNumber: String
  assetNumber_not: String
  assetNumber_in: [String!]
  assetNumber_not_in: [String!]
  assetNumber_lt: String
  assetNumber_lte: String
  assetNumber_gt: String
  assetNumber_gte: String
  assetNumber_contains: String
  assetNumber_not_contains: String
  assetNumber_starts_with: String
  assetNumber_not_starts_with: String
  assetNumber_ends_with: String
  assetNumber_not_ends_with: String
  assetName: String
  assetName_not: String
  assetName_in: [String!]
  assetName_not_in: [String!]
  assetName_lt: String
  assetName_lte: String
  assetName_gt: String
  assetName_gte: String
  assetName_contains: String
  assetName_not_contains: String
  assetName_starts_with: String
  assetName_not_starts_with: String
  assetName_ends_with: String
  assetName_not_ends_with: String
  stockQuantity: Int
  stockQuantity_not: Int
  stockQuantity_in: [Int!]
  stockQuantity_not_in: [Int!]
  stockQuantity_lt: Int
  stockQuantity_lte: Int
  stockQuantity_gt: Int
  stockQuantity_gte: Int
  outQuantity: Int
  outQuantity_not: Int
  outQuantity_in: [Int!]
  outQuantity_not_in: [Int!]
  outQuantity_lt: Int
  outQuantity_lte: Int
  outQuantity_gt: Int
  outQuantity_gte: Int
  tag_every: TagWhereInput
  tag_some: TagWhereInput
  tag_none: TagWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [AssetWhereInput!]
  OR: [AssetWhereInput!]
  NOT: [AssetWhereInput!]
}

input AssetWhereUniqueInput {
  id: ID
  partNumber: String
}

type BatchPayload {
  count: Long!
}

scalar DateTime

scalar Long

type Mutation {
  createAsset(data: AssetCreateInput!): Asset!
  updateAsset(data: AssetUpdateInput!, where: AssetWhereUniqueInput!): Asset
  updateManyAssets(data: AssetUpdateManyMutationInput!, where: AssetWhereInput): BatchPayload!
  upsertAsset(where: AssetWhereUniqueInput!, create: AssetCreateInput!, update: AssetUpdateInput!): Asset!
  deleteAsset(where: AssetWhereUniqueInput!): Asset
  deleteManyAssets(where: AssetWhereInput): BatchPayload!
  createTag(data: TagCreateInput!): Tag!
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updateManyTags(data: TagUpdateManyMutationInput!, where: TagWhereInput): BatchPayload!
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteManyTags(where: TagWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  asset(where: AssetWhereUniqueInput!): Asset
  assets(where: AssetWhereInput, orderBy: AssetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Asset]!
  assetsConnection(where: AssetWhereInput, orderBy: AssetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AssetConnection!
  tag(where: TagWhereUniqueInput!): Tag
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  asset(where: AssetSubscriptionWhereInput): AssetSubscriptionPayload
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Tag {
  id: ID!
  tagName: String!
  asset(where: AssetWhereInput, orderBy: AssetOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Asset!]
}

type TagConnection {
  pageInfo: PageInfo!
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  id: ID
  tagName: String!
  asset: AssetCreateManyWithoutTagInput
}

input TagCreateManyWithoutAssetInput {
  create: [TagCreateWithoutAssetInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutAssetInput {
  id: ID
  tagName: String!
}

type TagEdge {
  node: Tag!
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  tagName_ASC
  tagName_DESC
}

type TagPreviousValues {
  id: ID!
  tagName: String!
}

input TagScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  tagName: String
  tagName_not: String
  tagName_in: [String!]
  tagName_not_in: [String!]
  tagName_lt: String
  tagName_lte: String
  tagName_gt: String
  tagName_gte: String
  tagName_contains: String
  tagName_not_contains: String
  tagName_starts_with: String
  tagName_not_starts_with: String
  tagName_ends_with: String
  tagName_not_ends_with: String
  AND: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TagWhereInput
  AND: [TagSubscriptionWhereInput!]
  OR: [TagSubscriptionWhereInput!]
  NOT: [TagSubscriptionWhereInput!]
}

input TagUpdateInput {
  tagName: String
  asset: AssetUpdateManyWithoutTagInput
}

input TagUpdateManyDataInput {
  tagName: String
}

input TagUpdateManyMutationInput {
  tagName: String
}

input TagUpdateManyWithoutAssetInput {
  create: [TagCreateWithoutAssetInput!]
  delete: [TagWhereUniqueInput!]
  connect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutAssetInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutAssetInput!]
  deleteMany: [TagScalarWhereInput!]
  updateMany: [TagUpdateManyWithWhereNestedInput!]
}

input TagUpdateManyWithWhereNestedInput {
  where: TagScalarWhereInput!
  data: TagUpdateManyDataInput!
}

input TagUpdateWithoutAssetDataInput {
  tagName: String
}

input TagUpdateWithWhereUniqueWithoutAssetInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutAssetDataInput!
}

input TagUpsertWithWhereUniqueWithoutAssetInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutAssetDataInput!
  create: TagCreateWithoutAssetInput!
}

input TagWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  tagName: String
  tagName_not: String
  tagName_in: [String!]
  tagName_not_in: [String!]
  tagName_lt: String
  tagName_lte: String
  tagName_gt: String
  tagName_gte: String
  tagName_contains: String
  tagName_not_contains: String
  tagName_starts_with: String
  tagName_not_starts_with: String
  tagName_ends_with: String
  tagName_not_ends_with: String
  asset_every: AssetWhereInput
  asset_some: AssetWhereInput
  asset_none: AssetWhereInput
  AND: [TagWhereInput!]
  OR: [TagWhereInput!]
  NOT: [TagWhereInput!]
}

input TagWhereUniqueInput {
  id: ID
  tagName: String
}

type User {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  middleName: String
  contactNumber: String
  loginSecret: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  firstName: String!
  lastName: String!
  middleName: String
  contactNumber: String
  loginSecret: String!
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  middleName_ASC
  middleName_DESC
  contactNumber_ASC
  contactNumber_DESC
  loginSecret_ASC
  loginSecret_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  middleName: String
  contactNumber: String
  loginSecret: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  email: String
  firstName: String
  lastName: String
  middleName: String
  contactNumber: String
  loginSecret: String
}

input UserUpdateManyMutationInput {
  email: String
  firstName: String
  lastName: String
  middleName: String
  contactNumber: String
  loginSecret: String
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  middleName: String
  middleName_not: String
  middleName_in: [String!]
  middleName_not_in: [String!]
  middleName_lt: String
  middleName_lte: String
  middleName_gt: String
  middleName_gte: String
  middleName_contains: String
  middleName_not_contains: String
  middleName_starts_with: String
  middleName_not_starts_with: String
  middleName_ends_with: String
  middleName_not_ends_with: String
  contactNumber: String
  contactNumber_not: String
  contactNumber_in: [String!]
  contactNumber_not_in: [String!]
  contactNumber_lt: String
  contactNumber_lte: String
  contactNumber_gt: String
  contactNumber_gte: String
  contactNumber_contains: String
  contactNumber_not_contains: String
  contactNumber_starts_with: String
  contactNumber_not_starts_with: String
  contactNumber_ends_with: String
  contactNumber_not_ends_with: String
  loginSecret: String
  loginSecret_not: String
  loginSecret_in: [String!]
  loginSecret_not_in: [String!]
  loginSecret_lt: String
  loginSecret_lte: String
  loginSecret_gt: String
  loginSecret_gte: String
  loginSecret_contains: String
  loginSecret_not_contains: String
  loginSecret_starts_with: String
  loginSecret_not_starts_with: String
  loginSecret_ends_with: String
  loginSecret_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`
      }
    